package com.tinyhuman.tinyhumanapi.user.mock;

import com.tinyhuman.tinyhumanapi.auth.eum.SocialMedia;
import com.tinyhuman.tinyhumanapi.user.domain.User;
import com.tinyhuman.tinyhumanapi.user.enums.UserStatus;
import com.tinyhuman.tinyhumanapi.user.service.port.UserRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

public class FakeUserRepository implements UserRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0L);

    private final List<User> data = new ArrayList<>();

    @Override
    public User save(User user) {
        if (user.id() == null || user.id() == 0) {
            User newUser = User.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .name(user.name())
                    .email(user.email())
                    .password(user.password())
                    .status(UserStatus.ACTIVE)
                    .lastLoginAt(null)
                    .build();
            data.add(newUser);
            return newUser;
        } else {
            data.removeIf(u -> Objects.equals(u.id(), user.id()));
            data.add(user);
            return user;
        }
    }

    @Override
    public Optional<User> findById(Long id) {
        return data.stream()
                .filter(user -> user.id().equals(id))
                .findAny();
    }

    @Override
    public Optional<User> findByEmail(String email) {
        return data.stream()
                .filter(user -> user.email().equals(email))
                .findAny();
    }

    @Override
    public Optional<User> findByEmailAndSocialMedia(String email, SocialMedia socialMedia) {
        return data.stream()
                .filter(user -> (user.email().equals(email) && user.socialMedia().equals(socialMedia)))
                .findAny();
    }

    @Override
    public boolean existsByEmail(String email) {
        return data.stream()
                .anyMatch(s -> s.email().equals(email));

    }

    @Override
    public boolean existsByEmailAndSocialMedia(String email, SocialMedia socialMedia) {
        return data.stream()
                .anyMatch(s -> (s.email().equals(email) && s.socialMedia().equals(socialMedia)));
    }
}
