package com.tinyhuman.tinyhumanapi.diary.mock;

import com.tinyhuman.tinyhumanapi.diary.domain.Diary;
import com.tinyhuman.tinyhumanapi.diary.domain.Picture;
import com.tinyhuman.tinyhumanapi.diary.service.port.PictureRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

public class FakePictureRepository implements PictureRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0L);

    private final List<Picture> data = new ArrayList<>();
    @Override
    public List<Picture> saveAll(List<Picture> pictures, Diary savedDiary) {

        List<Picture> newPictures = new ArrayList<>();

        for (Picture picture : pictures) {
            data.removeIf(s -> Objects.equals(s.id(), picture.id()));
            Picture newPicture = Picture.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .isMainPicture(picture.isMainPicture())
                    .contentType(picture.contentType())
                    .keyName(picture.keyName())
                    .preSignedUrl(picture.preSignedUrl())
                    .diaryId(picture.diaryId())
                    .build();
            data.add(newPicture);
            newPictures.add(newPicture);
        }

        return newPictures;
    }

    @Override
    public Optional<Picture> findById(Long id) {
        return  data.stream()
                .filter(d -> d.id().equals(id))
                .findAny();
    }
}
